from src.core.auth.user import User
from src.core.db import db
from passlib.hash import sha256_crypt
from src.core.resource_manager import ResourceManager

users=ResourceManager(db.session,User)

def get_user_by_id(user_id):
    """ Get user by id
    Args:
        - user_id (integer): User id. Unique, autogenerated
    Returns:
        - User object
    """
    return users.query.get(user_id)

def list_active_users():
    """ List all active users
    Returns:
        - List of User objects
    """
    return users.query.filter(User.active == True).all()

def list_inactive_users():
    """ List all inactive users
    Returns:
        - List of User objects
    """
    return users.query.filter(User.active == False).all()

def create_user(form):
    """ Create user
    Returns:
        - Create user
    """
    user = User(**form)
    db.session.add(user)
    db.session.commit()
    return user

def delete_user(user_id):
    """ Delete user
    Returns:
        - Delete user
    """
    users.query.filter(User.id == user_id).update({"active":False})
    db.session.commit()

def update_user(user_id, form):
    """ Update user
    Returns:
        - Update user
    """
    users.query.filter(User.id == user_id).update(form)
    db.session.commit()

def get_by_usr_and_pwd(usr,pwd):
    """Gets user by username and password
    Returns:
        - User if username and pwd are correct
        - Else returns None
    """
    usr = users.query.filter(User.deleted==False,User.username==usr).first()
    if(usr!=None and sha256_crypt.verify(pwd,usr.password)):
        return usr
    return None

