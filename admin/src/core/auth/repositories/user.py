from src.core.auth.user import User
from passlib.hash import sha256_crypt
from src.core.auth import users


def get_user_by_id(user_id):
    """Get user by id
    Args:
        - user_id (integer): User id. Unique, autogenerated
    Returns:
        - User object
    """
    return users.query.filter(User.id == user_id).first()


def list_users(column=None,filter=True):
    """List all users
    Returns:
        - List of User objects
    """
    if column:
        return users.paginated_filter(column,filter)
    return users.paginated_list()


def create_user(form):
    """Create user
    Returns:
        - Create user
    """
    user = User(**form)
    users.add(user)
    return user


def delete_user(user_id):
    """Delete user
    Returns:
        - Delete user
    """
    users.delete(user_id)


def update_user(user_id, form):
    """Update user
    Returns:
        - Update user
    """
    users.update(user_id,form)


def get_by_usr_and_pwd(usr, pwd):
    """Gets user by username and password
    Returns:
        - User if username and pwd are correct
        - Else returns None
    """
    usr = users.query.filter(User.username == usr).first()
    if usr != None and sha256_crypt.verify(pwd, usr.password):
        return usr
    return None


def disable_user(id):
    """Disable user
    Returns:
        - Disabled user
    """
    users.update(id,{"active":False})
    

def enable_user(id):
    """Enable user
    Returns:
        - Enabled user
    """
    users.update(id,{"active":True})
